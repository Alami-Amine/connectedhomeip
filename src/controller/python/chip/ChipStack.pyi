from typing import Any, Callable


class ChipStack:
    _ChipStackLib: Any
    _chipDLLPath: Any
    devMgr: Any
    _enableServerInteractions: bool
    cbHandleChipThreadRun: Any
    _persistentStorage: Any

    def __init__(self, persistentStoragePath: str, enableServerInteractions: bool = True) -> None: ...
    def GetStorageManager(self) -> Any: ...
    @property
    def enableServerInteractions(self) -> bool: ...
    def Shutdown(self) -> None: ...
    def Call(self, callFunct: Callable[..., Any], timeoutMs: int = None) -> Any: ...
    async def CallAsyncWithResult(self, callFunct: Callable[..., Any], timeoutMs: int = None) -> Any: ...
    async def CallAsync(self, callFunct: Callable[..., Any], timeoutMs: int = None) -> None: ...
    def PostTaskOnChipThread(self, callFunct: Callable[..., Any]) -> Any: ...
    def LocateChipDLL(self) -> str: ...
